% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recode.R
\name{recode}
\alias{recode}
\alias{recode_}
\alias{recode_.default}
\alias{recode_.factor}
\title{Recode}
\usage{
recode(x, ..., by = x, drop = TRUE, add = FALSE, as_factor = FALSE,
  arrange = FALSE)

recode_(x, dots, by = x, ...)

\method{recode_}{default}(x, dots, by, as_factor = FALSE, ...)

\method{recode_}{factor}(x, dots, by, drop = TRUE, add = FALSE,
  arrange = FALSE, ...)
}
\arguments{
\item{x}{A vector to be recoded.}

\item{...}{Named arguments with the criteria for the recodes. In essence \code{recode = criteria}.
\code{.} can also be used as a shorthand for the vector given in \code{by}.}

\item{by}{The vector to recode values in \code{x} 'by'.}

\item{drop}{Drop factor levels that have been recoded away from, and it has no remaining observations
after the recode.}

\item{add}{Set to \code{TRUE} to add levels to an existing factor variable.}

\item{as_factor}{Convert \code{numeric} or \code{character} vectors to
factor after recoding. Named recodes will be used as levels.}

\item{arrange}{Set to \code{TRUE} to alphabetically sort the factor levels.}

\item{dots}{A named list with either values that can be used with \code{\%in\%} or
a boolean values.}
}
\description{
A simple function for recoding, which aims to replace nested \code{ifelse} statements.
Typical use cases include; recoding numeric vectors into a factor, merging factor levels in
an existing factor, and more.
}
\examples{
df \%>\% mutate(loy = recode(q15b, "Neg" = 1:6L, "Neu" = 7:8L, "Pos" = 9:10L, as_factor = TRUE))
}
\author{
Kristian D. Olsen
}

